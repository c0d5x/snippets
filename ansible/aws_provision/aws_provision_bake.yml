---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning
    vars:
      instance_type: t2.micro
      security_group: "pocdeploy" # Change the security group name here
      image: ami-18d98a78 # Change the AMI, from which you want to launch the server
      region: us-west-1 # Change the Region
      keypair: gl-josehidalgo-pub-ssh # Change the keypair name
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:
      - name: Download WAR file
        s3:
            bucket: josewarfiles
            object: "{{ warfile }}"
            dest: "./files/{{ warfile }}"
            mode: get

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.public_ip }} 
                      insertafter="[deployed]" line={{ item.public_ip }}
        with_items: "{{ ec2.instances }}"


      - name: Wait for WinRM to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=5985 
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: "{{warfile}}"

      - name: Stop tomcat
        with_items: "{{ ec2.instances }}"
        win_service: name=Tomcat8 state=stopped

      - name: Copy WAR to app servers
        with_items: "{{ ec2.instances }}"
        win_copy:
            src: "./files/{{ warfile }}"
            dest: "c:/tomcat8/webapps/{{ warfile }}"

      - name: Enable Tomcat service
        with_items: "{{ ec2.instances }}"
        win_service: name=Tomcat8 state=started start_mode=auto

      - name: Bake AMI
        with_items: "{{ ec2.instances }}"
        ec2_ami:
            instance_id: "{{ instance.id }}"
            name: "{{ warfile }}"
            device_mapping:
                - device_name: /dev/sda1
                  size: 30
                  delete_on_termination: true
                  volume_type: gp2
        register: ami

      - debug: var=ami
